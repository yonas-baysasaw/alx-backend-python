pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = credentials('github-credentials')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = credentials('github-credentials')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/yourusername/alx-backend-python.git', credentialsId: 'github-credentials'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('messaging_app') {
                    bat 'python -m venv venv'
                    bat 'call venv\\Scripts\\activate.bat && pip install -r requirements.txt'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('messaging_app') {
                    bat 'call venv\\Scripts\\activate.bat && pytest tests --junitxml=report.xml'
                }
            }
        }

        stage('Publish Report') {
            steps {
                dir('messaging_app') {
                    junit 'report.xml'
                }
            }
        }
    }

    post {
        always {
            dir('messaging_app') {
                archiveArtifacts artifacts: 'report.xml', allowEmptyArchive: true
            }
        }
    }
}

            }
        }

        stage('Install Dependencies') {
            steps {
                dir('messaging_app') {
                    bat 'python -m venv venv'
                    bat 'call venv\\Scripts\\activate.bat && pip install -r requirements.txt'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('messaging_app') {
                    bat 'call venv\\Scripts\\activate.bat && pytest tests --junitxml=report.xml'
                }
            }
        }

        stage('Publish Report') {
            steps {
                dir('messaging_app') {
                    junit 'report.xml'
                }
            }
        }
    }

    post {
        always {
            dir('messaging_app') {
                archiveArtifacts artifacts: 'report.xml', allowEmptyArchive: true
            }
        }
    }
}
